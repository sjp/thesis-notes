
2012-08-14
----------

DISCUSS:

  + Extend the interactive campus map ?
    (William's project from a couple of years back)

  + Link to "Grammar of Graphics" Google group from Hadley

    https://groups.google.com/group/gsofgs


TODO:

  + Export viewport transforms to SVG

    - keep going

  + Need a more "real" example

    - Stripped down version of one of Chris's simulation movies?
    - Reimplement some of the googleViz style plots?
    - Gapminder style plots ?

  + Keep thinking about categorisation of different options
    (including diagram and glossary)


DONE: 

  + Export viewport transforms to SVG

    - current.transform() gets (some of) the info 
    - devGrob.viewport() needs to add the info 
    - svgStartGroup() needs to accumulate the info
    - svgClose() needs to write the info out (as JSON?)
    - also need to write a bunch of standard javascript functions
      to do the transformations, culminating in ...

      viewportConvertX(vpname, x, from, to)
      viewportConvertY(vpname, x, from, to)
      viewportConvertWidth(vpname, x, from, to)
      viewportConvertHeight(vpname, x, from, to)
    

PAUL DONE:

  + emailed Hadley Wickham, Jay Emerson, and Sasha Goodman just to let
    them know that we are working in the area (they are all doing  
    things vaguely similar).  This serves both to politely carve out
    a little space for ourselves and to create an opportunity for 
    feedback and ideas and examples from these other guys.


2012-08-09
----------

NOTES:

  + Simon's examples/websockets/smoother-example/
    is wildly good because it is the browser and R communicating
    to update the *graphics* DOM. 
    In particular, it is NOT just asking R for a completely new plot.
    It talks to R to get new information to MODIFY existing components
    of an existing plot (SVG DOM).

  + Also implemented the example with FastRWeb and Rook
    BUT FastRWeb is a pain in the ass to install/configure

  + In the websockets model, R sends messages to browser AND browser 
    sends messages to R.
    In the Rook (http) model, browser sends request to R and R 
    generates response.

  + There appear to be several people working on side-stepping R
    or reproducing R graphics in javascript (D3).
    The advantage of our approach is that we get (almost) all
    plots that grid can produce PLUS the grid graphics infrastructure
    (viewports etc) and THEN we can use D3 to manipulate it.
    => don't have to reimplement R/grid graphics (visible) output in javascript
    AND don't have to reimplement R/grid graphics (invisible) infrastructure


FOR NOTING:

  + Slides from Jay Emerson from JSM talk
    (see Resources/MikeSession.pdf)

  + Duncan Temple Lang (and Gabriel Becker) gave presentation at JSM
    on "RBrowserPlugin framework".  Can't find any other links to
    this, but it sounds like RFirefox (?)

  + project 'gg' on github

    https://github.com/gigamonkey/gg

    Allows Grammar of Graphics style description of plot
    and renders it using javascript (D3)

    Any interactivity???


TODO:

  + Export viewport transforms to SVG

    - current.transform() gets (some of) the info 
    - devGrob.viewport() needs to add the info 
    - svgStartGroup() needs to accumulate the info
    - svgClose() needs to write the info out (as JSON?)
    - also need to write a bunch of standard javascript functions
      to do the transformations, culminating in ...

      viewportConvertX(vpname, x, from, to)
      viewportConvertY(vpname, x, from, to)
      viewportConvertWidth(vpname, x, from, to)
      viewportConvertHeight(vpname, x, from, to)
    
  + Need a more "real" example

    - Stripped down version of one of Chris's simulation movies?
    - Reimplement some of the googleViz style plots?
    - Gapminder style plots ?

  + Keep thinking about categorisation of different options
    (including diagram and glossary)


DONE:

  + Can you use D3 to muck about with existing SVG?
    Can it be used as an "SVG accelerator" to render faster?

  + Push the three candidate R-as-web-server options (glossary!)
    a bit harder by trying to implement a more complex example
    (see "BIG EXAMPLE" below)

  + New D3 demo (see examples/d3/ggplot-demo.html)

  + Reorganize git repo

    - instead of 2012-07-25/2012-07-25.org 
      have litreview.org (at top level)

    - instead of 2012-07-25/Rook/ etc
      have Examples/Rook/
  

2012-07-31
----------

IDEA:

  + modify 'gridSVG' to auto-insert a javascript function, say convert(), 
    into SVG output (plus an array of constants) that effectively 
    records the coordinate system conversions for every 'grid'
    viewport.  Then you can easily write javascript code to 
    do things like add a new shape at a location within a viewport
    (SVG <g>) that are positioned relative to the "native" coordinate
    system of the original 'grid' viewport (e.g., draw stuff relative
    to plot axis scales)


TODO:

  + Reorganize git repo

    - instead of 2012-07-25/2012-07-25.org 
      have litreview.org (at top level)

    - instead of 2012-07-25/Rook/ etc
      have Examples/Rook/

  + Can you use D3 to muck about with existing SVG?
    Can it be used as an "SVG accelerator" to render faster?

  + Push the three candidate R-as-web-server options (glossary!)
    a bit harder by trying to implement a more complex example
    (see "BIG EXAMPLE" below)

  + Keep thinking about categorisation of different options
    (including diagram and glossary)


PAUL TODO:

  + Read Simon's notes


DONE:

  + Investigate some more R-web tech (Rook and R-Node and websockets)

    Executive summary:

    - Three possible candidates so far:  FastRWeb, Rook, and websockets

  + Add note about RStatServer (RSOAP, RSessionDA, R-Zope?)

    All Greg Warnes stuff that appears abandoned?

    http://research.warnes.net/statcomp/projects/RStatServer/   

  + Set up git repos for working with Paul

  + Keep thinking about categorisation of different options
    (including diagram and glossary)

  + Document the example code (and ALL example code from now on!)

    See 2012-07-25/*/ and 2012-07-25/*.org
    (e.g., 2012-07-25/Rook/ and 2012-07-25/Rook-example.org)

  + Explore javascript libraries for manipulating SVG/DOM?


FOR NOTING:

  + git for DUMMIES

    - git clone  (create LOCAL[*] from ORIGIN[*])

    - git status  (what the hell is going on)

    - git pull  (changes from ORIGIN[MASTER] to LOCAL[MASTER])
    - modify file
    - git add file  (stage changes for commit)
    - git commit  (commit to LOCAL[MASTER])
    - git push  (push to ORIGIN[MASTER])

  + "timely portfolio" blog has stuff on combining R and D3 via
    'websockets'
    
    http://timelyportfolio.blogspot.co.nz/2012/07/hi-r-and-axys-im-d3js-nice-to-meet-you.html

    Looks like all *drawing* done in D3, just use R for data analysis

  + Hadley Wickham is also looking at D3+R

    New r2d3 project on github

    - first impressions are that this is converting ggplot2 R objects
      to JSON arrays (of arrays) so far
      Presumably, the next step is to write D3 code to render the
      JSON arrays (?)
      
    The D3-js Google group has a thread "correct way to display
    lat/lon data onto a D3.geo projection with fluid 'width' and
    'height'" started by Hadley

    https://groups.google.com/group/d3-js/tree/browse_frm/month/2012-07/09f754d891cdbcfd?rnum=121&_done=%2Fgroup%2Fd3-js%2Fbrowse_frm%2Fmonth%2F2012-07%3F

    Also some stuff in interview Hadly gave to MetaMarkets

    http://metamarkets.com/2012/data-scientist-profile-hadley-wickham/


2012-07-25
----------

THE BIG EXAMPLE:

  + A web page containing a scatterplot (SVG) and a slider.

    The slider controls the "smoothness" of a smoother 
    through the data on the scatterplot.

    The smoother (line in the scatterplot) is updated
    by the web browser talking to R and getting new 
    information to describe the smoother and then
    the SVG scatterplot is modified in place.

    NOT generating an entire new scatterplot from R.

    NOT producing an initial plot with all possible 
    smoothers and then showing/hiding the appropriate ones.


TODO:

  + Add note about RStatServer (RSOAP, RSessionDA, R-Zope?)

    All Greg Warnes stuff that appears abandoned?

    http://research.warnes.net/statcomp/projects/RStatServer/   

  + Set up git repos for working with Paul

  + Investigate some more R-web tech (Rook and R-Node and websockets)

  + Keep thinking about categorisation of different options
    (including diagram and glossary)

  + Document the example code (and ALL example code from now on!)

  + Explore javascript libraries for manipulating SVG/DOM?


PAUL TODO:

  + READ Simon's notes

  + Email Jay Emerson


DONE:

  + Overview of ways to set up R as web back-end

    See 2012-07-25/notes-2012-07-17.txt (Org-mode doc)


2012-07-17
----------

PAUL DONE:

  + Check timings and deadlines with Arden for Master Thesis

    Simon is officially part-time, so has until Sem 2 2013 to finish!


TODO:

  + Overview of ways to set up R as web back-end

    RFirefox
    SNetscape
    Rserve
    RSOAP
    R.NET.Web
    Rpad
    RApache
    Rcgi
    Rook
    FastRWeb
    RStudio
    webSockets
    ...

    - find them all 
        - Google
        - R-forge
        - R-help
        - http://www.sciviews.org/_rgui/
        - GSoC

    - document them all
        - short description
        - feature list
        - categorisation (client/server, ...)
        - state (active, dead, developing)
        - who is involved
        - pros and cons

    - implement a simple example
        - a single SVG circle that on-click is modified BY R
          (e.g., R selects a new random location for the circle)


IDEAS:

  + Another reason to "flatten" the grid display list
    (flattening would take gTrees and replace them with
     their children [being careful to store all relevant 
     info for correctly drawing the children in the children])

    Could then have a combination of viewports and grobs where
    you could draw more "efficiently" by creating each viewport
    and then drawing ALL grobs in that viewport
    (no need to get going back into and out of the same viewport)
    => things like clipping become easier
    (have a clean tree structure)


2012-06-22
----------

+ Masters degree Guidelines

  http://www.auckland.ac.nz/webdav/site/central/shared/for/current-students/postgraduate-students/documents/publications/masters-handbook.pdf

+ Main idea is system for creating dynamic interactive plots

+ Probably based on gridSVG, but with R as live back-end to update
  SVG on-the-fly

+ Competing projects are the usual suspects 
  (protovis, Google Viz API, ...)

  PLUS Duncan Temple-Lang's
  - SVGAnnotation
  - R embedded in Firefox

  PLUS Simon Urbanek's projects
  - FastRWeb (and R graphics)
  - WebGL and WS+Rserve

+ Also see some of the discussion on GSOC 2012 about interactive web 
  graphics.

  Matt Shotwell has some good ideas about a "grammar" or "language"
  for expressing interactive graphics

+ Awwation for animated zooming presentation slides

  http://adityabhatt.wordpress.com/2012/04/06/writing-a-prezi-clone-with-html5-svg-and-javascript/

  Useful comments on SVG vs Canvas 

  Nice example demo linked at the bottom.

+ Sasha Goodman wants to combine 'gridSVG' and D3 

  http://vis.stanford.edu/papers/d3

  See email discussion in 'gridSVG' folder (2012-04)


Simon's BIG IDEA:

  + Keep R in the picture.

    Rather than ...

    R -> SVG -> Browser

    ... do something like ...

    R <-> (SVG <->) browser

  + Applications:

    - VIT done better (Chris Wild's stuff)

    - Plot "templates" that you can choose the data for

    - Dynamic reporting

  
INFO:

  + Masters (following BSc honours)
 
  + 6 paper project (instead of 2)

    => 90 points

    => "Thesis"

  + 2 papers already done


PAUL TODO:

  + Check timings and deadlines with Arden for Master Thesis

